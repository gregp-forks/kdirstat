diff -c -r -N /usr/src/source/new/kdirstat-1.7.1-alpha/kdirstat/Makefile.am kdirstat/Makefile.am
*** /usr/src/source/new/kdirstat-1.7.1-alpha/kdirstat/Makefile.am	Sun Jun 10 20:22:08 2001
--- kdirstat/Makefile.am	Wed Jun 13 02:32:37 2001
***************
*** 7,12 ****
--- 7,13 ----
  bin_PROGRAMS = kdirstat
  
  kdirstat_SOURCES = 				\
+ 	ktreemap.cpp				\
  	kdirtree.cpp				\
  	kdirtreeview.cpp			\
  	kdirsaver.cpp				\
***************
*** 15,20 ****
--- 16,22 ----
  	kdirstatmain.cpp
  
  noinst_HEADERS =				\
+ 	ktreemap.h				\
  	kdirtree.h				\
  	kdirtreeview.h				\
  	kdirsaver.h				\
diff -c -r -N /usr/src/source/new/kdirstat-1.7.1-alpha/kdirstat/kdirstatapp.cpp kdirstat/kdirstatapp.cpp
*** /usr/src/source/new/kdirstat-1.7.1-alpha/kdirstat/kdirstatapp.cpp	Mon Jun 11 03:16:47 2001
--- kdirstat/kdirstatapp.cpp	Wed Jun 13 21:27:34 2001
***************
*** 25,30 ****
--- 25,31 ----
  
  #include "kdirstatapp.h"
  #include "kpacman.h"
+ #include "ktreemap.h"
  
  #define ID_STATUS_MSG 1
  
***************
*** 56,61 ****
--- 57,65 ----
  
      // disable actions at startup
      editCopy->setEnabled( false );
+ 
+     //    _treemap_view=new KDirStat::KTreeMap(this);
+     //_treemap_view=new KDirStat::KTreeMap(this);
  }
  
  KDirStatApp::~KDirStatApp()
diff -c -r -N /usr/src/source/new/kdirstat-1.7.1-alpha/kdirstat/kdirstatapp.h kdirstat/kdirstatapp.h
*** /usr/src/source/new/kdirstat-1.7.1-alpha/kdirstat/kdirstatapp.h	Mon Jun 11 00:53:16 2001
--- kdirstat/kdirstatapp.h	Wed Jun 13 18:51:53 2001
***************
*** 26,34 ****
  #include <kaccel.h>
  #include <kaction.h>
  #include "kdirtreeview.h"
  
  class KPacMan;
! 
  
  /**
    * The base class for KDirStat application windows. It sets up the main window
--- 26,35 ----
  #include <kaccel.h>
  #include <kaction.h>
  #include "kdirtreeview.h"
+ #include "ktreemap.h"
  
  class KPacMan;
! //class KDirStat::KTreeMap;
  
  /**
    * The base class for KDirStat application windows. It sets up the main window
***************
*** 207,212 ****
--- 208,215 ----
      KAction * 			editCopy;
      KToggleAction * 		viewToolBar;
      KToggleAction * 		viewStatusBar;
+ 
+     KDirStat::KTreeMap  *_treemap_view;
  };
  
   
diff -c -r -N /usr/src/source/new/kdirstat-1.7.1-alpha/kdirstat/kdirtreeview.cpp kdirstat/kdirtreeview.cpp
*** /usr/src/source/new/kdirstat-1.7.1-alpha/kdirstat/kdirtreeview.cpp	Mon Jun 11 03:18:25 2001
--- kdirstat/kdirtreeview.cpp	Wed Jun 13 21:40:46 2001
***************
*** 24,29 ****
--- 24,30 ----
  
  #include "kdirtreeview.h"
  #include "kpacman.h"
+ #include "ktreemap.h"
  
  using namespace KDirStat;
  
***************
*** 101,106 ****
--- 102,109 ----
  
     connect ( kapp,	SIGNAL	( kdisplayPaletteChanged()	),
  	     this, 	SLOT	( paletteChanged()		) );
+ 	
+    _treemap_view=new KDirStat::KTreeMap(this);
  }
  
  
***************
*** 136,141 ****
--- 139,146 ----
  	removeColumn( _readJobsCol );
  	_readJobsCol = -1;
      }
+ 
+     _treemap_view->drawTreeMap(_tree->root());
  }
  
  
diff -c -r -N /usr/src/source/new/kdirstat-1.7.1-alpha/kdirstat/kdirtreeview.h kdirstat/kdirtreeview.h
*** /usr/src/source/new/kdirstat-1.7.1-alpha/kdirstat/kdirtreeview.h	Mon Jun 11 01:01:54 2001
--- kdirstat/kdirtreeview.h	Wed Jun 13 21:30:30 2001
***************
*** 33,39 ****
  #include <qpixmap.h>
  #include <klistview.h>
  #include "kdirtree.h"
! 
  
  // Forward declarations
  class QWidget;
--- 33,39 ----
  #include <qpixmap.h>
  #include <klistview.h>
  #include "kdirtree.h"
! #include "ktreemap.h"
  
  // Forward declarations
  class QWidget;
***************
*** 343,348 ****
--- 343,350 ----
  	QPixmap _fifoIcon;
  	QPixmap	_workingIcon;
  	QPixmap	_readyIcon;
+ 	
+ 	KTreeMap  *_treemap_view;
      };
  
      
diff -c -r -N /usr/src/source/new/kdirstat-1.7.1-alpha/kdirstat/ktreemap.cpp kdirstat/ktreemap.cpp
*** /usr/src/source/new/kdirstat-1.7.1-alpha/kdirstat/ktreemap.cpp	Thu Jan  1 01:00:00 1970
--- kdirstat/ktreemap.cpp	Thu Jun 14 00:27:30 2001
***************
*** 0 ****
--- 1,214 ----
+ /*
+  *   File name:	ktreemap.cpp
+  *   Summary:	Support classes for KDirStat
+  *   License:	LGPL - See file COPYING.LIB for details.
+  *   Author:	Alexander Rawass <alexannika@users.sourceforge.net>
+  *
+  *   Updated:	2001-06-10
+  *
+  *   $Id: treemaps-2001-06-14.diff,v 1.1 2001/06/29 13:20:18 hundhammer Exp $
+  *
+  */
+ 
+ 
+ #include <string.h>
+ #include <sys/errno.h>
+ #include <math.h>
+ #include <stdlib.h>
+ #include <qtimer.h>
+ #include <kdebug.h>
+ #include <kapp.h>
+ #include <klocale.h>
+ #include "kdirtree.h"
+ #include "kdirtreeview.h"
+ #include "kdirsaver.h"
+ #include "ktreemap.h"
+ #include <qmainwindow.h>
+ 
+ using namespace KDirStat;
+ 
+ KDirStat::KTreeMap::KTreeMap( QWidget *parent ) //: QWidget(parent){
+ {
+   //widget=new QWidget(parent);
+   widget=new QMainWindow();
+   widget->resize(1024,700);
+   widget->show();
+ 
+   printf("KTreeMap::KTreeMap\n");
+   //painter=new QPainter(this);
+   painter=new QPainter(widget);
+   default_color=QColor(255,255,255);
+ }
+ 
+ void KTreeMap::drawTreeMap(KFileInfo *dutree){
+ 
+   printf("KTreeMap::drawTreeMap\n");
+ 
+   root_tree=dutree;
+ 
+   int x0=0;
+   int y0=0;
+   int xd0=600;
+   int yd0=400;
+ 
+   //  options=new KTreeMapOptions(DM_FILES,PM_FLAT,-1,0);
+   options=new KTreeMapOptions(DM_BOTH,PM_FLAT,-1,0);
+ 
+   painter->setWindow(x0,y0,xd0,yd0);
+   painter->setPen(QColor(0,0,0));
+   //painter->setBrush( NoBrush );
+   //painter->setPen( NoPen );
+ 
+     QPen mypen(painter->pen());
+     mypen.setWidth(2);
+     mypen.setColor(QColor(0,255,0));
+     painter->setPen( mypen);
+ 
+     painter->drawLine(0,0,xd0,yd0);
+     painter->drawLine(xd0,0,0,yd0);
+ 
+     drawDuTree(dutree,x0,y0,xd0,yd0,options->start_direction,0);
+ 
+ }
+ 
+ void KTreeMap::drawDuTree(KFileInfo *dutree, int x0,int y0,int xd0, int yd0, bool direction, int level){
+   QString node_name=dutree->debugUrl();
+   KFileInfo *sub_nodes=dutree->firstChild();
+   int node_totalsize=dutree->totalSize();
+   //int node_totalsize=dutree->size();
+ 
+   printf("KTreeMap::drawDuTree(%s,%d,%d,%d,%d,dir=%d,level=%d) %d\n",node_name.latin1(),x0,y0,xd0,yd0,direction,level,node_totalsize);
+ 
+     if(xd0>=1 && yd0>=1){
+       // we do not draw invisible rectangles
+       if(dutree->isDotEntry()){
+ 	printf("DOTENTRY\n");
+       }
+       if((options->draw_mode==DM_FILES && dutree->isFile()) || options->draw_mode==DM_BOTH){
+ 	QColor basecolor;
+ 	//basecolor=getBaseColor(node_name);
+ 	basecolor=QColor(rand()&255,rand()&255,rand()&255);
+ 	printf("drawing file\n");
+ 	paintEntry(x0,y0,xd0,yd0,node_name,direction,level,basecolor);
+       }
+       else if((options->draw_mode==DM_DIRS && dutree->isDir()) || options->draw_mode==DM_BOTH){
+ 	QColor dircolor=QColor(255,0,0);
+ 	printf("drawing dir\n");
+ 	paintEntry(x0,y0,xd0,yd0,node_name,direction,level,dircolor);
+       }
+       else{
+ 	// error
+       }
+       
+       appendRectlist(node_name,x0,y0,xd0,yd0);
+ 
+       int x=x0;
+       int y=y0;
+       int xd=0;
+       int yd=0;
+ 
+       for(KFileInfo *subtree=sub_nodes;subtree!=NULL;subtree=subtree->next()){
+ 	int subnode_size=subtree->totalSize();
+ 	//int subnode_size=subtree->size();
+ 	  if(node_totalsize==0){
+ 	    // we do not descend in directories with 0 size
+ 	    printf("KTreeMap: zero subdir %s\n",subtree->url().latin1());
+ 	  }
+ 	  else{
+ 	    float percent_size=(float)subnode_size/(float)node_totalsize;
+ 	    
+ 	    if(direction==HORIZONTAL){
+ 	      // horizontal
+ 	      xd=xd0;
+ 	      yd=(int)(yd0*percent_size);
+ 	    }
+ 	    else{
+ 	      // vertikal
+ 	      xd=(int)(xd0*percent_size);
+ 	      yd=yd0;
+ 	    }
+ 	    bool subdirection=!direction;
+ 	    
+ 	    int sw=options->step_width;
+ 	    
+ 	    drawDuTree(subtree,x,y,xd-sw,yd-sw,subdirection,level+1);
+ 	    
+ 	    if(direction==HORIZONTAL){
+ 	      // horizontal
+ 	      y=y+yd;
+ 	    }
+ 	    else{
+ 	      x=x+xd;
+ 	    }
+ 	  }
+       }
+     }
+ }
+ 
+ 
+ 
+ void KTreeMap::paintEntry(int x0, int y0, int xd, int yd,QString entry_name,bool direction,int level,const QColor &basecolor){
+ 
+   if(options->paintmode==PM_FLAT){
+     painter->fillRect(x0,y0,xd,yd,basecolor);
+     printf("painting: %d %d %d %d\n",x0,y0,xd,yd);
+     //painter->drawText(x0,y0,entry_name);
+     //painter->fillRect(x0,y0,xd,yd,QColor(0,0,0));
+   }
+   /*
+   else if(options->paintmode==PM_CUSHION){
+   }
+   else if(options->paintmode==PM_PYRAMID){
+   }
+   else if(options->paintmode==PM_BITMAP){
+   }
+   */
+   else{
+     printf("KTreeMap::paintEntry no option\n");
+   }
+ }
+ 
+ void KTreeMap::appendRectlist(QString node_name,int x,int y,int xd,int yd){
+ 
+ }
+ 
+ QColor&  getBaseColor(QString name){
+   QColor basecolor;
+ 	/*
+ 	if(isExecutable()){
+ 	  basecolor=NULL;
+ 	}
+ 	else{
+ 	  basecolor=getBaseColorByName(node_name);
+ 	}
+ 	*/
+   basecolor=QColor( rand()&255 , rand()&255, rand()&255 );
+ 
+   return basecolor;
+ }
+ 
+ KFileInfo *KTreeMap::findClickedMap(KFileInfo *dutree,int x,int y){
+   KFileInfo *found;
+ 
+   // still missing, coming soon
+ 
+   return found;
+ }
+ 
+ void KTreeMap::paintEvent( QPaintEvent *){
+   drawTreeMap(root_tree);
+ }
+ 
+ KTreeMap::~KTreeMap()
+ {
+ }
+ 
+ KTreeMapOptions::KTreeMapOptions(int dm,int pm, bool dir,int sw){
+   draw_mode=dm;
+   paintmode=pm;
+   start_direction=dir;
+   step_width=sw;
+ }
+ 
+ 
+ // EOF
diff -c -r -N /usr/src/source/new/kdirstat-1.7.1-alpha/kdirstat/ktreemap.h kdirstat/ktreemap.h
*** /usr/src/source/new/kdirstat-1.7.1-alpha/kdirstat/ktreemap.h	Thu Jan  1 01:00:00 1970
--- kdirstat/ktreemap.h	Thu Jun 14 00:04:57 2001
***************
*** 0 ****
--- 1,98 ----
+ /*
+  *   File name:	ktreemap.h
+  *   Summary:	Support classes for KDirStat
+  *   License:	LGPL - See file COPYING.LIB for details.
+  *   Author:	Alexander Rawass <alexannika@users.sourceforge.net>
+  *
+  *   Updated:	2001-06-11
+  *
+  *   $Id: treemaps-2001-06-14.diff,v 1.1 2001/06/29 13:20:18 hundhammer Exp $
+  *
+  */
+ 
+ #ifndef KTreeMap_h
+ #define KTreeMap_h
+ 
+ 
+ #ifdef HAVE_CONFIG_H
+ #   include <config.h>
+ #endif
+ 
+ #include <sys/types.h>
+ #include <limits.h>
+ #include <dirent.h>
+ #include <qqueue.h>
+ #include <kfileitem.h>
+ 
+ #ifndef NOT_USED
+ #    define NOT_USED(PARAM)	( (void) (PARAM) )
+ #endif
+ 
+ // Open a new name space since KDE's name space is pretty much cluttered
+ // already - all names that would even remotely match are already used up,
+ // yet the resprective classes don't quite fit the purposes required here.
+ 
+ namespace KDirStat
+ {
+ 
+ #define PM_FLAT 0
+ 
+ #define DM_DIRS 0
+ #define DM_FILES 1
+ #define DM_BOTH 2
+ 
+ #define HORIZONTAL 0
+ #define VERTIKAL 1
+ 
+   class KTreeMapOptions {
+   public:
+     KTreeMapOptions(int dm,int pm, bool dir,int sw);
+ 
+     //    colorScheme=
+     int draw_mode;
+     int paintmode;
+     bool start_direction;
+     int step_width;
+   };
+ 
+   //  class KTreeMap : public QWidget {
+   class KTreeMap  {
+     Q_OBJECT
+ 
+   public:
+     KTreeMap(QWidget *parent=0);
+     ~KTreeMap();
+ 
+     void drawTreeMap(KFileInfo *dutree);
+     KFileInfo *findClickedMap(KFileInfo *dutree,int x,int y);
+ 
+     void paintEvent(QPaintEvent *);
+ 
+ 
+   protected:
+ 
+     void drawDuTree(KFileInfo *dutree, int x0,int y0,int xd0, int yd0, bool direction, int level);
+     void paintEntry(int x0, int y0, int xd, int yd,QString entry_name,bool direction,int level,const QColor &basecolor);
+   
+ 
+   void appendRectlist(QString node_name,int x,int y,int xd,int yd);
+ 
+   
+ 
+   QColor& getBaseColor(QString name);
+ 
+   QPainter *painter;
+   KTreeMapOptions *options;
+   QColor default_color;
+   QWidget *widget;
+   QPen mypen;
+ 
+   KFileInfo *root_tree;
+   };
+ } // namespace
+ 
+ 
+ #endif // ifndef KTreeMap_h
+ 
+ 
+ // EOF
